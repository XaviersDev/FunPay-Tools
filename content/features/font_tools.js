// content/features/font_tools.js

function initializeFontTools() {
    // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ—Ç–∞
    const header = document.querySelector('h1.page-header');
    if (!header || !(header.textContent.includes('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è') || header.textContent.includes('–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è'))) {
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª–∏ –ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω—ã —Ä–∞–Ω–µ–µ
    if (document.querySelector('.fp-tools-font-controls')) {
        return;
    }

    const fonts = {
      "small": { "–∞": "·¥Ä", "–±": "–±", "–≤": " ô", "–≥": "·¥¶", "–¥": "–¥", "–µ": "·¥á", "—ë": "—ë", "–∂": "–∂", "–∑": "–∑", "–∏": "–∏", "–π": "–π", "–∫": "·¥ã", "–ª": "·¥ß", "–º": " ç", "–Ω": "–Ω", "–æ": "–æ", "–ø": "·¥®", "—Ä": "·¥©", "—Å": "·¥Ñ", "—Ç": "·¥õ", "—É": "—É", "—Ñ": "…∏", "—Ö": "—Ö", "—Ü": "—Ü", "—á": "—á", "—à": "…Ø", "—â": "—â", "—ä": "—ä", "—ã": "—ã", "—å": "—å", "—ç": "œ∂", "—é": "—é", "—è": "—è", "a": "·¥Ä", "b": " ô", "c": "·¥Ñ", "d": "·¥Ö", "e": "·¥á", "f": "Íú∞", "g": "…¢", "h": " ú", "i": "…™", "j": "·¥ä", "k": "·¥ã", "l": " ü", "m": "·¥ç", "n": "…¥", "o": "·¥è", "p": "·¥ò", "q": "«´", "r": " Ä", "s": "s", "t": "·¥õ", "u": "·¥ú", "v": "·¥†", "w": "·¥°", "x": "x", "y": " è", "z": "·¥¢" },
      "canad": { "–∞": "·ó£", "–±": "·òú", "–≤": "·ôñ", "–≥": "·íã", "–¥": "·ó™", "–µ": "·ôì", "—ë": "·ïß", "–∂": "·ôß", "–∑": "·ôê", "–∏": "·ëå", "–π": "·ï´", "–∫": "·è¶", "–ª": "·ôÅ", "–º": "·ó∞", "–Ω": "·ïº", "–æ": "·óù", "–ø": "·ëé", "—Ä": "·ñò", "—Å": "·ôÖ", "—Ç": "·ô¢", "—É": "·éΩ", "—Ñ": "·ô®", "—Ö": "‚µã", "—Ü": "·òà", "—á": "·î¶", "—à": "·óØ", "—â": "·ò∫", "—ä": "·ïπ", "—ã": "·ï†", "—å": "·ñö", "—ç": "·ëì", "—é": "·ï°", "—è": "·ñÜ" },
      "runi": { "–∞": "·ö§", "–±": "·é∂", "–≤": "·õí", "–≥": "·õö", "–¥": "·ö¶", "–µ": "·õä", "—ë": "·õä", "–∂": "·õØ", "–∑": "‚Ñ•", "–∏": "·õã", "–π": "·õã", "–∫": "·õï", "–ª": "·ö≥", "–º": "·õñ", "–Ω": "·ö∫", "–æ": "·õú", "–ø": "·ö¢", "—Ä": "·öπ", "—Å": "·õà", "—Ç": "·õ†", "—É": "·ö¥", "—Ñ": "·õÑ", "—Ö": "·ö∑", "—Ü": "·õ™", "—á": "·õ©", "—à": "‚∞û", "—â": "‚∞û·õß", "—ä": "‚∞ì", "—ã": "‚∞ì·õÅ", "—å": "‚∞ì", "—ç": "‚∞Ö", "—é": "·öøŒ∏", "—è": "·ö±", "a": "·ö£", "b": "·õí", "c": "·õà", "d": "·ö¶", "e": "·õä", "f": "·ö™", "g": "·õà·õß", "h": "·öª", "i": "·õô", "j": "êêà", "k": "·õï", "l": "·ö≥", "m": "·õñ", "n": "·ö∫", "o": "·õü", "p": "·öπ", "q": "êåí", "r": "·ö±", "s": "êê†", "t": "·õ†", "u": "·õò", "v": "·õâ", "w": "êêé", "x": "·ö∑", "y": "·ö¥", "z": "·õ¢" },
      "efilopia": { "–∞": "·àç", "–±": "·çî", "–≤": "·çé", "–≥": "·äì", "–¥": "·àè", "–µ": "·ã≠", "—ë": "·ã≠", "–∂": "·à¶", "–∑": "·äï", "–∏": "·àÄ", "–π": "·àÖ", "–∫": "·ä∏", "–ª": "·â†", "–º": "·å†", "–Ω": "·ãò", "–æ": "·ãê", "–ø": "·ä®", "—Ä": "·ã®", "—Å": "·à≠", "—Ç": "·çê", "—É": "·äê", "—Ñ": "·ãã", "—Ö": "·å∞", "—Ü": "·àÖ", "—á": "·àÉ", "—à": "·à†", "—â": "·à°", "—ä": "·çò", "—ã": "·çä", "—å": "·à™", "—ç": "·åì", "—é": "·à¨", "—è": "·å∏" },
      "angle": { "–∞": "‚ßº–∞‚ßΩ", "–±": "‚ßº–±‚ßΩ", "–≤": "‚ßº–≤‚ßΩ", "–≥": "‚ßº–≥‚ßΩ", "–¥": "‚ßº–¥‚ßΩ", "–µ": "‚ßº–µ‚ßΩ", "—ë": "‚ßº—ë‚ßΩ", "–∂": "‚ßº–∂‚ßΩ", "–∑": "‚ßº–∑‚ßΩ", "–∏": "‚ßº–∏‚ßΩ", "–π": "‚ßº–π‚ßΩ", "–∫": "‚ßº–∫‚ßΩ", "–ª": "‚ßº–ª‚ßΩ", "–º": "‚ßº–º‚ßΩ", "–Ω": "‚ßº–Ω‚ßΩ", "–æ": "‚ßº–æ‚ßΩ", "–ø": "‚ßº–ø‚ßΩ", "—Ä": "‚ßº—Ä‚ßΩ", "—Å": "‚ßº—Å‚ßΩ", "—Ç": "‚ßº—Ç‚ßΩ", "—É": "‚ßº—É‚ßΩ", "—Ñ": "‚ßº—Ñ‚ßΩ", "—Ö": "‚ßº—Ö‚ßΩ", "—Ü": "‚ßº—Ü‚ßΩ", "—á": "‚ßº—á‚ßΩ", "—à": "‚ßº—à‚ßΩ", "—â": "‚ßº—â‚ßΩ", "—ä": "‚ßº—ä‚ßΩ", "—ã": "‚ßº—ã‚ßΩ", "—å": "‚ßº—å‚ßΩ", "—ç": "‚ßº—ç‚ßΩ", "—é": "‚ßº—é‚ßΩ", "—è": "‚ßº—è‚ßΩ", "a": "‚ßºa‚ßΩ", "b": "‚ßºb‚ßΩ", "c": "‚ßºc‚ßΩ", "d": "‚ßºd‚ßΩ", "e": "‚ßºe‚ßΩ", "f": "‚ßºf‚ßΩ", "g": "‚ßºg‚ßΩ", "h": "‚ßºh‚ßΩ", "i": "‚ßºi‚ßΩ", "j": "‚ßºj‚ßΩ", "k": "‚ßºk‚ßΩ", "l": "‚ßºl‚ßΩ", "m": "‚ßºm‚ßΩ", "n": "‚ßºn‚ßΩ", "o": "‚ßºo‚ßΩ", "p": "‚ßºp‚ßΩ", "q": "‚ßºq‚ßΩ", "r": "‚ßºr‚ßΩ", "s": "‚ßºs‚ßΩ", "t": "‚ßºt‚ßΩ", "u": "‚ßºu‚ßΩ", "v": "‚ßºv‚ßΩ", "w": "‚ßºw‚ßΩ", "x": "‚ßºx‚ßΩ", "y": "‚ßºy‚ßΩ", "z": "‚ßºz‚ßΩ" }
    };
    const symbols = [ '‚òÖ', '‚òÜ', '‚ú™', '‚úØ', '‚ú°', '‚ú©', '‚úß', '‚úµ', '‚ú∂', '‚ú∑', '‚ú∏', '‚úπ', '‚•â', '‚•ã', '‚•å', '‚•ç', '‚•é', '‚•è', '‚•ê', '‚•ë', '‚•í', '‚•ì', '‚•î', '‚•ï', '‚úî', '‚úì', '‚òë', '‚úÖ', '‚úñ', '‚ùå', '‚úò', '‚ùé', '‚ù§', '‚ô°', '‚ô•', '‚ù£', '‚ú®', '‚ö°', '‚ùÑ', 'üî•', '‚òò', '‚öú', '‚ö´', '‚ö™', '‚óº', '‚óª', '‚óè', '‚óã', '‚û•', '‚û¶', '‚ûß', '‚û®', '‚ûö', '‚ûò', '‚ûô', '‚ûõ', '‚ûú', '‚ûù', '‚ûû', '‚ûü', '‚û°', '‚û¢', '‚û£', '‚û§', '‚Æû', '‚Æü', '‚Æ†', '‚Æ°', '‚Æ¢', '‚Æ£', '‚Æ§', '‚Æ•', '‚ñ∂', '‚óÄ', '‚ñ≤', '‚ñº', '‚ñ∫', '‚óÑ', '‚ßé', '‚ßè', '‚ßê', '‚ßë', '‚ßí', '‚ßì', '‚öî', '‚öñ', '‚öï', '‚öì', '‚öô', '‚ö†', '‚õî', '‚ò¢', '‚ò£', '‚¨Ü', '‚Üó', '‚û°' ];

    let activeTextarea = null;

    const controlBlock = document.querySelector(".lot-fields-multilingual");
    if (!controlBlock) return;

    const controlsHtml = `
        <div class="form-group fp-tools-font-controls">
            <div class="font-selector">
                <label class="control-label">–®—Ä–∏—Ñ—Ç</label>
                <select class="form-control" id="fpToolsFontSelect">
                    <option value="">–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π</option>
                    <option value="small">·¥®–æ·¥®·¥©–æ–±—É–π œ∂·¥õ–æ·¥õ …Ø·¥©–∏…∏·¥õ</option>
                    <option value="canad">·¥®·óù·¥®·¥©·óù·òú·éΩ·ï´ œ∂·¥õ·óù·¥õ …Ø·¥©·ëå…∏·¥õ</option>
                    <option value="runi">·ö¢·õú·ö¢·öπ·õú·é∂·ö¥·õã ‚∞Ö·õ†·õú·õ† ‚∞û·öπ·õã·õÑ·õ†</option>
                    <option value="efilopia">·ä®·ãê·ä®·ã®·ãê·çî·äê·àÖ ·åì·çê·ãê·çê ·à†·ã®·àÄ·ãã·çê</option>
                    <option value="angle">‚ßº–ø‚ßΩ‚ßº–æ‚ßΩ‚ßº–ø‚ßΩ‚ßº—Ä‚ßΩ‚ßº–æ‚ßΩ‚ßº–±‚ßΩ‚ßº—É‚ßΩ‚ßº–π‚ßΩ ‚ßº—ç‚ßΩ‚ßº—Ç‚ßΩ‚ßº–æ‚ßΩ‚ßº—Ç‚ßΩ ‚ßº—à‚ßΩ‚ßº—Ä‚ßΩ‚ßº–∏‚ßΩ‚ßº—Ñ‚ßΩ‚ßº—Ç‚ßΩ</option>
                </select>
            </div>
            <button type="button" class="btn btn-default" id="fpToolsKeyboardToggleBtn">
                <i class="fa fa-keyboard-o" aria-hidden="true"></i> –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            </button>
        </div>
        <div class="fp-tools-symbols-panel" style="display: none;"></div>
    `;
    
    controlBlock.insertAdjacentHTML('beforeend', controlsHtml);

    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ –ø–æ–ª–µ –≤–≤–æ–¥–∞ (–õ–Æ–ë–û–ï: textarea –∏–ª–∏ input)
    document.querySelectorAll('textarea, input[type="text"]').forEach(element => {
        element.addEventListener('focus', function() {
            activeTextarea = this;
        });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–≤—Ç–æ–∑–∞–º–µ–Ω—ã —à—Ä–∏—Ñ—Ç–∞ (—Ç–µ–ø–µ—Ä—å –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª–µ–π .lot-field-input)
    document.querySelectorAll(".lot-field-input, input[name='fields[short_desc][ru]']").forEach(input => {
        input.addEventListener("input", function(event) {
            const fontSelect = document.getElementById("fpToolsFontSelect");
            const selectedFont = fontSelect.value;
            if (!selectedFont || !event.data) return;

            const lastChar = event.data;
            const newChar = fonts[selectedFont][lastChar.toLowerCase()];

            if (newChar) {
                const currentVal = this.value;
                const cursorPos = this.selectionStart;
                this.value = currentVal.slice(0, cursorPos - 1) + newChar + currentVal.slice(cursorPos);
                this.selectionStart = this.selectionEnd = cursorPos;
            }
        });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞"
    document.getElementById("fpToolsKeyboardToggleBtn").addEventListener("click", function() {
        const panel = document.querySelector(".fp-tools-symbols-panel");
        if (panel.innerHTML === '') {
            panel.innerHTML = symbols.map(symbol => `<span class="fp-tools-symbol-char">${symbol}</span>`).join('');
        }
        panel.style.display = panel.style.display === 'none' ? 'grid' : 'none';
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —Å–∏–º–≤–æ–ª—É
    document.addEventListener("click", function(event) {
        if (!event.target.classList.contains('fp-tools-symbol-char')) return;
        
        if (activeTextarea) {
            const currentVal = activeTextarea.value;
            const cursorPos = activeTextarea.selectionStart;
            const symbol = event.target.textContent;
            
            const newVal = currentVal.substring(0, cursorPos) + symbol + currentVal.substring(cursorPos);
            activeTextarea.value = newVal;
            
            const newCursorPos = cursorPos + symbol.length;
            activeTextarea.selectionStart = activeTextarea.selectionEnd = newCursorPos;
            activeTextarea.focus();
        } else {
            showNotification("–°–Ω–∞—á–∞–ª–∞ –∫–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –ª—é–±–æ–µ –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞.", true);
        }
    });
}